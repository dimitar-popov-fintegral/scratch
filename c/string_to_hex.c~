#include <stdlib.h>
#include <stdio.h>


void char2hex(char c, char out[]);
void knuth_fisher_yates_shuffle(int array[], int len);
int pick_random(int from);
int contains(int choice, int picked[], int len);


////////////////////////////////////////
int main(){

  // 0: init. random number generator
  srand(12357);

  // 1: init. words, names
  int num_words = 18;
  const char * w[num_words];
  w[0] = "sweet";
  w[1] = "small";
  w[2] = "many";  
  w[3] = "brown";
  w[4] = "rectangular";
  w[5] = "wooden";
  w[6] = "flat";
  w[7] = "deep";
  w[8] = "flashy";
  w[9] = "furry";
  w[10] = "spicy";
  w[11] = "magical";
  w[12] = "round";
  w[13] = "foreign";
  w[14] = "striped";
  w[15] = "empty";
  w[16] = "empty";  
  w[17] = "empty";
  
  int num_people = 6;
  const char * p[num_people];
  p[0] = "Nastyusha";
  p[1] = "Nastja";
  p[2] = "Dima";
  p[3] = "Katja";
  p[4] = "Artem";
  p[5] = "Dim";

  // 2: prepare random numbers
  int people_order[num_people];
  for(int i = 0; i < num_people; ++i)
    people_order[i] = i;

  knuth_fisher_yates_shuffle(people_order, num_people);
  knuth_fisher_yates_shuffle(people_order, num_people);  

  int word_order[num_words];
  for(int i = 0; i < num_words; ++i)
    word_order[i] = i;

  knuth_fisher_yates_shuffle(word_order, num_words);
  knuth_fisher_yates_shuffle(word_order, num_words);  

  // 3: assign words -> people
  int words_per_person = num_words / num_people;
  int counter = 0;
  for(int i = 0; i < num_people; ++i){

    printf("Person [%s]: ", p[i]);

    for(int j = 0; j < words_per_person; ++j){

      counter++;

      if(counter>num_words)
	break;

      char out[2];
      int wlen = sizeof(w[counter]) / sizeof(char);

      for(int k = 0; k < wlen; ++k){

	char2hex(w[counter][k], out);
	printf("%s", out);

      }
      printf(" ");

    }
    printf("\n");
    
  }

  /*
  // 2: Encode strings

  // check
  for(int j = 0; j < len; ++j)
    printf("%X", s[j]);
  printf("\n");

  // convert via implementation 
  char out[2];
  for(int i = 0; i < len; ++i){
    char2hex(s[i], out);
    printf("res [%d] = [%s] \n", i, out);
  }
  */

  return 0;

}


/* Function: knuth_fisher_yates_shuffle
 * ----------------------------------------
 * this function illustrates a known pattern in C
 * the array passed :param original: cannot be 
 * identified for it's size
 * the above is related to the property of C 
 * that says; C is not a reflective language
 * objects do not know what they are
 */
void knuth_fisher_yates_shuffle(int arr[], int len){

  printf("Begin KFY shuffle on arr array of size [%d] \n", len);
  for(int i = len - 1; i >= 1; --i){

    int j = rand() % (i+1);
    int temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
    
  }

}


////////////////////////////////////////
int contains(int choice, int picked[], int len){
  
  int c;
  int res = 0;
  for(int j = 0; j < len; ++j)
    if(picked[j] == c)
      res-=1;

  return res;
}


////////////////////////////////////////
int pick_random(int from){

  return rand() % from;

}


////////////////////////////////////////
void char2hex(char c, char out[]){

  char possible_values[] = "0123456789ABCDEF";

  out[2] = '\0';
  for(int i = 1; c != 0; --i){
    out[i] = possible_values[c % 16];
    c /= 16;
  }
  
}
